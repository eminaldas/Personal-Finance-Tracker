"""init tables

Revision ID: 6a253aeef0cb
Revises: cf1acd8db503
Create Date: 2025-08-24 16:14:57.302471

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6a253aeef0cb'
down_revision: Union[str, Sequence[str], None] = 'cf1acd8db503'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('icon', sa.String(length=40), nullable=True),
    sa.Column('color_hex', sa.String(length=7), nullable=True),
    sa.Column('is_expense', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_categories_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categories')),
    sa.UniqueConstraint('user_id', 'name', name='uq_categories_user_name')
    )
    op.create_index('ix_categories_archived', 'categories', ['is_archived'], unique=False)
    op.create_index('ix_categories_user', 'categories', ['user_id'], unique=False)
    op.create_table('user_settings',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(length=12), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('first_day_of_month', sa.SmallInteger(), nullable=False),
    sa.Column('locale', sa.String(length=16), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_settings_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_user_settings'))
    )
    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('month_start', sa.Date(), nullable=False),
    sa.Column('limit_amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('notify', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_budgets_category_id_categories'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_budgets_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_budgets')),
    sa.UniqueConstraint('user_id', 'category_id', 'month_start', name='uq_budgets_user_cat_month')
    )
    op.create_index('ix_budget_user_month', 'budgets', ['user_id', 'month_start'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('income', 'expense', name='txn_type'), nullable=False),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=False),
    sa.Column('occurred_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('note', sa.String(length=300), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('amount > 0', name=op.f('ck_transactions_ck_transactions_amount_pos')),
    sa.CheckConstraint('occurred_at <= NOW()', name=op.f('ck_transactions_ck_transactions_not_future')),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name=op.f('fk_transactions_category_id_categories'), ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_transactions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_transactions'))
    )
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    op.create_index('ix_tx_category', 'transactions', ['category_id'], unique=False)
    op.create_index('ix_tx_type', 'transactions', ['type'], unique=False)
    op.create_index('ix_tx_user_date', 'transactions', ['user_id', 'occurred_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_tx_user_date', table_name='transactions')
    op.drop_index('ix_tx_type', table_name='transactions')
    op.drop_index('ix_tx_category', table_name='transactions')
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('ix_budget_user_month', table_name='budgets')
    op.drop_table('budgets')
    op.drop_table('user_settings')
    op.drop_index('ix_categories_user', table_name='categories')
    op.drop_index('ix_categories_archived', table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
